(-> color[]) {
  color c = rgb(rc(), rc(), rc());
  (color -> color)[] transformations = [ ::iso_r, ::iso_g, ::iso_b, ::greyscale ];
  color[] output = new color[#|transformations];

  for (int i = 0; i < #|transformations; i++)
    output[i] = transformations[i].call(c);

  return output;
}

iso_r(color c -> color) -> rgba(c.red, 0, 0, c.alpha)
iso_g(color c -> color) -> rgba(0, c.green, 0, c.alpha)
iso_b(color c -> color) -> rgba(0, 0, c.blue, c.alpha)

greyscale(color c -> color) {
  int avg = (c.red + c.green + c.blue) / 3;
  return rgba(avg, avg, avg, c.alpha);
}

rc(-> int) -> rand(0, 0x100)
